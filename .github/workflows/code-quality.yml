name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-quality-${{ hashFiles('**/requirements.txt') }}
    
    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy pylint bandit safety
        pip install -r requirements.txt
    
    - name: Format check with Black
      run: |
        echo "üé® Checking code formatting with Black..."
        black --check --diff .
    
    - name: Import sort check with isort
      run: |
        echo "üì¶ Checking import sorting with isort..."
        isort --check-only --diff .
    
    - name: Lint with flake8
      run: |
        echo "üîç Linting with flake8..."
        flake8 . --count --statistics --format='::error file=%(path)s,line=%(row)d,col=%(col)d::%(code)s: %(text)s'
    
    - name: Type check with mypy
      run: |
        echo "üîç Type checking with mypy..."
        mypy . --ignore-missing-imports || echo "‚ö†Ô∏è Type checking completed with warnings"
    
    - name: Security scan with bandit
      run: |
        echo "üîí Security scanning with bandit..."
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt
    
    - name: Dependency vulnerability check
      run: |
        echo "üõ°Ô∏è Checking for known vulnerabilities..."
        safety check --json --output safety-report.json || echo "‚ö†Ô∏è Vulnerability check completed"
        safety check
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
    
    - name: Code complexity check with pylint
      run: |
        echo "üìä Checking code complexity..."
        pylint --exit-zero --output-format=json:pylint-report.json,text . || true
    
    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quality-reports
        path: pylint-report.json
